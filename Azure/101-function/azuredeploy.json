{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "namePrefix": {
      "type": "string",
      "minLength": 2,
      "maxLength": 50,
      "metadata": {
        "description": "Service name prefix must only contain lowercase letters, digits or dashes, cannot use dash as the first two or last one characters, cannot contain consecutive dashes, and is limited between 2 and 50 characters in length."
      }
    },

    "azFunctionAppSku": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "Y1",
        "B1",
        "S1",
        "P1",
        "P1V2"

      ],
      "metadata": {
        "description": "The SKU of the Azure Function you want to create."
      }
    },
    "storageSku": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "This is  Storage Account SKU associated with Azure Function"
      }
    },
    "repoURL": {
      "type": "string",
      "defaultValue": "https://github.com/flecoqui/TestPythonAzFuncARM.git",
      "metadata": {
        "description": "The URL for the GitHub repository that contains the project to deploy."
      }
    },
    "repoBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "The branch of the GitHub repository to use."
      }
    },
    "repoFunctionPath": {
      "type": "string",
      "defaultValue": "PythonFunction",
      "metadata": {
        "description": "The path of the Python Azure Function code on github."
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "azFunctionPlanName": "[concat(parameters('namePrefix'), 'functplan')]",
    "azFunctionName": "[concat(parameters('namePrefix'), 'function')]",
    "azFunctionInsightName": "[concat(parameters('namePrefix'), 'insight')]",
    "storageName": "[concat(parameters('namePrefix'), 'storage')]",
    "azFuncSku": {
      "y1": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "d1": {
        "name": "D1",
        "tier": "Shared",
        "size": "D1",
        "family": "D",
        "capacity": 0
      },
      "f1": {
        "name": "F1",
        "tier": "Free",
        "size": "F1",
        "family": "F",
        "capacity": 0
      },
      "b1": {
        "name": "B1",
        "tier": "Basic",
        "size": "B1",
        "family": "B",
        "capacity": 0
      },
      "s1": {
        "name": "S1",
        "tier": "Standard",
        "size": "S1",
        "family": "S",
        "capacity": 0
      },
      "p1": {
        "name": "P1",
        "tier": "Premium",
        "size": "P1",
        "family": "P",
        "capacity": 0
      },
      "p1v2": {
        "name": "P1V2",
        "tier": "PremiumV2",
        "size": "P1V2",
        "family": "PV2",
        "capacity": 0
      },
      "i1": {
        "name": "I1",
        "tier": "Isolated",
        "size": "I1",
        "family": "I",
        "capacity": 0
      }
    }
  },
  "resources": [
    {
      "comments": "Storage used by Azure Function",
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "[parameters('storageSku')]"
      },
      "kind": "Storage",
      "name": "[variables('storageName')]",
      "apiVersion": "2019-04-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "properties": {
        "cors": {
          "allowedHeaders": [ "*" ],
          "allowedMethods": [ "get", "post", "put" ],
          "allowedOrigins": [ "*" ],
          "exposedHeaders": [ "*" ],
          "maximumAge": 5
        },
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": false,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }

      },
      "resources": [],
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-04-01",
      "name": "[concat(variables('storageName'), '/default')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ],
      "properties": {
        "cors": {
          "allowedHeaders": [ "*" ],
          "allowedMethods": [ "get", "post", "put" ],
          "allowedOrigins": [ "*" ],
          "exposedHeaders": [ "*" ],
          "maximumAge": 5
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-04-01",
      "name": "[concat(variables('storageName'), '/default/azure-webjobs-hosts')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-04-01",
      "name": "[concat(variables('storageName'), '/default/azure-webjobs-secrets')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-04-01",
      "name": "[concat(variables('storageName'), '/default/scm-releases')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "[variables('azFuncSku')[toLower(parameters('azFunctionAppSku'))].name]",
        "tier": "[variables('azFuncSku')[toLower(parameters('azFunctionAppSku'))].tier]",
        "size": "[variables('azFuncSku')[toLower(parameters('azFunctionAppSku'))].size]",
        "family": "[variables('azFuncSku')[toLower(parameters('azFunctionAppSku'))].family]",
        "capacity": "[variables('azFuncSku')[toLower(parameters('azFunctionAppSku'))].capacity]"

      },
      "kind": "functionapp",
      "name": "[variables('azFunctionPlanName')]",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('azFuncSku')[toLower(parameters('azFunctionAppSku'))].name]",
        "perSiteScaling": false,
        "reserved": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "name": "[variables('azFunctionName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('azFunctionPlanName'))]"
      ],
      "kind": "functionapp",
      "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('azFunctionPlanName'))]",
      "properties": {
        "enabled": true,
        "siteConfig": {
          "appSettings": [
            {
              "name": "Project",
              "value": "[parameters('repoFunctionPath')]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~1"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~0.1"
            },
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=', variables('storageName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=', variables('storageName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')),'2015-05-01-preview').key1)]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2016-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('azFunctionName'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('repoURL')]",
            "branch": "[parameters('repoBranch')]",
            "IsManualIntegration": true
          }
        }
      ]

    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2015-05-01",
      "name": "[variables('azFunctionInsightName')]",
      "location": "[resourceGroup().location]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "AppServiceEnablementCreate"
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2016-08-01",
      "name": "[concat(variables('azFunctionName'), '/', variables('azFunctionName'), '.azurewebsites.net')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('azFunctionName'))]"
      ],
      "properties": {
        "siteName": "[variables('azFunctionName')]",
        "hostNameType": "Verified"
      }
    }
  ],
  "outputs": {
    "curlCmdAzFunction1": {
      "type": "string",
      "value": "[concat('curl -d \"{\"param1\":\"0123456789\",\"param2\":\"abcdef\"}\" -H \"Content-Type: application/json\"  -X POST   \"https://',variables('azFunctionName'),'.azurewebsites.net/api/HttpTriggerPythonFunction\"')]"
    },
    "curlCmdAzFunction2": {
      "type": "string",
      "value": "[concat('curl -H \"Content-Type: application/json\"  -X GET   \"https://',variables('azFunctionName'),'.azurewebsites.net/api/HttpTriggerPythonFunction?param1=0123456789&param2=abcdef\"')]"
    }

  }
}